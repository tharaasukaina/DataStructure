#include <iostream>
using namespace std;

class Node
{
public:
    int data;
    Node* next;
};
class Queue
{
private:
    Node* head;
    Node* tail;
    int length;
public :
    Queue() {
        head=NULL;
        tail=NULL;
        length=0;
    }

    int size () {
        return length;
    }
    bool empty() {
        return length==0;

    }
    void push( int x ) {
        Node* n = new Node;
        n->data = x;
        n->next = NULL;

        //if linked list is empty
        if (head == NULL) {
            head = n;
            tail = n;
        } else {
            tail->next = n;
            tail = n;
        }
     //addtotail
    length++;
}
    void pop() {
        Node* temp = head;
        head = head->next;
        delete temp;
        return;//delet from head
        length--;
    }
    int front() {
        return head->data;

    }

};

int main ()
{
    Queue m;
    m.push(10);
    m.push(20);
    m.push(30);
    cout<<m.front();

    return 0;
}
